######### DOSTĘPNE ENDPOINTY: #########


Wyświetla statyczny plik pomocniczy z listą endpointów:
/static/help.txt

>)Zwraca wartości filtra:
    /filters/<filter>
Dostępne filtry:
    degrees, semesters, specializations

>)Wyświetla stronę z rekordami:
    /students
Opcjonalne parametry:
    specialization, degree, semester, page_size, page_number, columns
Przykład użycia:
     <api>/students?specialization=Computer%20Science,%20Psychology&degree=1,2&semester=3,4,5,6,7&pageSize=3&pageNumber=1
     <api>/students?columns=first_name,last_name&pageSize=2&pageNumber=1

>)Wyświetla pojedynczy rekord na podstawie id:
    /student:<id>
Opcjonalne parametry:
    columns
Przykład użycia:
    <api>/api/student:3?columns=id,%20first_name,%20last_name,%20specialization

>)Aktualizuje istniejący rekord na podstawie id:
   PUT /student:<id>
Przykład użycia:
curl --location --request PUT 'http://127.0.0.1:5000/student:222' \
--header 'Content-Type: application/json' \
--data '{
  "first_name": "Alice",
  "last_name": "Johnson",
  "semester": 4,
  "age": 22,
  "specialization": "Computer Science",
  "degree": 1,
  "is_male": false
}'

>)Usuwa istniejący rekord na postawie id:
    DELETE /student:<id>
Przykład użycia:
curl --location --request DELETE 'http://127.0.0.1:5000/student:222'

>)Dodaje nowy rekord:
    POST /student
Przykład użycia:
curl --location 'http://127.0.0.1:5000/student' \
--header 'Content-Type: application/json' \
--data '{
  "first_name": "John",
  "last_name": "Doe",
  "degree": 1,
  "semester": 3,
  "specialization": "Software Engineering"

}'